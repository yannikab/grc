/* This file was generated by SableCC (http://www.sablecc.org/). */

package k31.grc.cst.node;

import k31.grc.cst.analysis.*;

@SuppressWarnings("nls")
public final class ASemicolonStatement extends PStatement
{
    private PSemicolonStmt _semicolonStmt_;

    public ASemicolonStatement()
    {
        // Constructor
    }

    public ASemicolonStatement(
        @SuppressWarnings("hiding") PSemicolonStmt _semicolonStmt_)
    {
        // Constructor
        setSemicolonStmt(_semicolonStmt_);

    }

    @Override
    public Object clone()
    {
        return new ASemicolonStatement(
            cloneNode(this._semicolonStmt_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASemicolonStatement(this);
    }

    public PSemicolonStmt getSemicolonStmt()
    {
        return this._semicolonStmt_;
    }

    public void setSemicolonStmt(PSemicolonStmt node)
    {
        if(this._semicolonStmt_ != null)
        {
            this._semicolonStmt_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._semicolonStmt_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._semicolonStmt_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._semicolonStmt_ == child)
        {
            this._semicolonStmt_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._semicolonStmt_ == oldChild)
        {
            setSemicolonStmt((PSemicolonStmt) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
