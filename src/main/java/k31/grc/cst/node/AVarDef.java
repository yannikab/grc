/* This file was generated by SableCC (http://www.sablecc.org/). */

package k31.grc.cst.node;

import java.util.*;
import k31.grc.cst.analysis.*;

@SuppressWarnings("nls")
public final class AVarDef extends PVarDef
{
    private TKeyVar _keyVar_;
    private TIdentifier _identifier_;
    private final LinkedList<PVarMore> _varMore_ = new LinkedList<PVarMore>();
    private TSepColon _sepColon_;
    private PType _type_;
    private TSepSemi _sepSemi_;

    public AVarDef()
    {
        // Constructor
    }

    public AVarDef(
        @SuppressWarnings("hiding") TKeyVar _keyVar_,
        @SuppressWarnings("hiding") TIdentifier _identifier_,
        @SuppressWarnings("hiding") List<?> _varMore_,
        @SuppressWarnings("hiding") TSepColon _sepColon_,
        @SuppressWarnings("hiding") PType _type_,
        @SuppressWarnings("hiding") TSepSemi _sepSemi_)
    {
        // Constructor
        setKeyVar(_keyVar_);

        setIdentifier(_identifier_);

        setVarMore(_varMore_);

        setSepColon(_sepColon_);

        setType(_type_);

        setSepSemi(_sepSemi_);

    }

    @Override
    public Object clone()
    {
        return new AVarDef(
            cloneNode(this._keyVar_),
            cloneNode(this._identifier_),
            cloneList(this._varMore_),
            cloneNode(this._sepColon_),
            cloneNode(this._type_),
            cloneNode(this._sepSemi_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAVarDef(this);
    }

    public TKeyVar getKeyVar()
    {
        return this._keyVar_;
    }

    public void setKeyVar(TKeyVar node)
    {
        if(this._keyVar_ != null)
        {
            this._keyVar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._keyVar_ = node;
    }

    public TIdentifier getIdentifier()
    {
        return this._identifier_;
    }

    public void setIdentifier(TIdentifier node)
    {
        if(this._identifier_ != null)
        {
            this._identifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._identifier_ = node;
    }

    public LinkedList<PVarMore> getVarMore()
    {
        return this._varMore_;
    }

    public void setVarMore(List<?> list)
    {
        for(PVarMore e : this._varMore_)
        {
            e.parent(null);
        }
        this._varMore_.clear();

        for(Object obj_e : list)
        {
            PVarMore e = (PVarMore) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._varMore_.add(e);
        }
    }

    public TSepColon getSepColon()
    {
        return this._sepColon_;
    }

    public void setSepColon(TSepColon node)
    {
        if(this._sepColon_ != null)
        {
            this._sepColon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._sepColon_ = node;
    }

    public PType getType()
    {
        return this._type_;
    }

    public void setType(PType node)
    {
        if(this._type_ != null)
        {
            this._type_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._type_ = node;
    }

    public TSepSemi getSepSemi()
    {
        return this._sepSemi_;
    }

    public void setSepSemi(TSepSemi node)
    {
        if(this._sepSemi_ != null)
        {
            this._sepSemi_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._sepSemi_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._keyVar_)
            + toString(this._identifier_)
            + toString(this._varMore_)
            + toString(this._sepColon_)
            + toString(this._type_)
            + toString(this._sepSemi_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._keyVar_ == child)
        {
            this._keyVar_ = null;
            return;
        }

        if(this._identifier_ == child)
        {
            this._identifier_ = null;
            return;
        }

        if(this._varMore_.remove(child))
        {
            return;
        }

        if(this._sepColon_ == child)
        {
            this._sepColon_ = null;
            return;
        }

        if(this._type_ == child)
        {
            this._type_ = null;
            return;
        }

        if(this._sepSemi_ == child)
        {
            this._sepSemi_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._keyVar_ == oldChild)
        {
            setKeyVar((TKeyVar) newChild);
            return;
        }

        if(this._identifier_ == oldChild)
        {
            setIdentifier((TIdentifier) newChild);
            return;
        }

        for(ListIterator<PVarMore> i = this._varMore_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PVarMore) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._sepColon_ == oldChild)
        {
            setSepColon((TSepColon) newChild);
            return;
        }

        if(this._type_ == oldChild)
        {
            setType((PType) newChild);
            return;
        }

        if(this._sepSemi_ == oldChild)
        {
            setSepSemi((TSepSemi) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
