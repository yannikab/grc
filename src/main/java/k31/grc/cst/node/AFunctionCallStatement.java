/* This file was generated by SableCC (http://www.sablecc.org/). */

package k31.grc.cst.node;

import k31.grc.cst.analysis.*;

@SuppressWarnings("nls")
public final class AFunctionCallStatement extends PStatement
{
    private PFunctionCallStmt _functionCallStmt_;

    public AFunctionCallStatement()
    {
        // Constructor
    }

    public AFunctionCallStatement(
        @SuppressWarnings("hiding") PFunctionCallStmt _functionCallStmt_)
    {
        // Constructor
        setFunctionCallStmt(_functionCallStmt_);

    }

    @Override
    public Object clone()
    {
        return new AFunctionCallStatement(
            cloneNode(this._functionCallStmt_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFunctionCallStatement(this);
    }

    public PFunctionCallStmt getFunctionCallStmt()
    {
        return this._functionCallStmt_;
    }

    public void setFunctionCallStmt(PFunctionCallStmt node)
    {
        if(this._functionCallStmt_ != null)
        {
            this._functionCallStmt_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._functionCallStmt_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._functionCallStmt_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._functionCallStmt_ == child)
        {
            this._functionCallStmt_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._functionCallStmt_ == oldChild)
        {
            setFunctionCallStmt((PFunctionCallStmt) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
