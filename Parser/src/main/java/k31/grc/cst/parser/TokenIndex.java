/* This file was generated by SableCC (http://www.sablecc.org/). */

package k31.grc.cst.parser;

import k31.grc.cst.node.*;
import k31.grc.cst.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    @Override
    public void caseTKeyVar(@SuppressWarnings("unused") TKeyVar node)
    {
        this.index = 0;
    }

    @Override
    public void caseTKeyChar(@SuppressWarnings("unused") TKeyChar node)
    {
        this.index = 1;
    }

    @Override
    public void caseTKeyInt(@SuppressWarnings("unused") TKeyInt node)
    {
        this.index = 2;
    }

    @Override
    public void caseTKeyIf(@SuppressWarnings("unused") TKeyIf node)
    {
        this.index = 3;
    }

    @Override
    public void caseTKeyThen(@SuppressWarnings("unused") TKeyThen node)
    {
        this.index = 4;
    }

    @Override
    public void caseTKeyElse(@SuppressWarnings("unused") TKeyElse node)
    {
        this.index = 5;
    }

    @Override
    public void caseTKeyWhile(@SuppressWarnings("unused") TKeyWhile node)
    {
        this.index = 6;
    }

    @Override
    public void caseTKeyDo(@SuppressWarnings("unused") TKeyDo node)
    {
        this.index = 7;
    }

    @Override
    public void caseTKeyFun(@SuppressWarnings("unused") TKeyFun node)
    {
        this.index = 8;
    }

    @Override
    public void caseTKeyRef(@SuppressWarnings("unused") TKeyRef node)
    {
        this.index = 9;
    }

    @Override
    public void caseTKeyNothing(@SuppressWarnings("unused") TKeyNothing node)
    {
        this.index = 10;
    }

    @Override
    public void caseTKeyReturn(@SuppressWarnings("unused") TKeyReturn node)
    {
        this.index = 11;
    }

    @Override
    public void caseTOperPlus(@SuppressWarnings("unused") TOperPlus node)
    {
        this.index = 12;
    }

    @Override
    public void caseTOperMinus(@SuppressWarnings("unused") TOperMinus node)
    {
        this.index = 13;
    }

    @Override
    public void caseTOperMul(@SuppressWarnings("unused") TOperMul node)
    {
        this.index = 14;
    }

    @Override
    public void caseTOperDiv(@SuppressWarnings("unused") TOperDiv node)
    {
        this.index = 15;
    }

    @Override
    public void caseTOperMod(@SuppressWarnings("unused") TOperMod node)
    {
        this.index = 16;
    }

    @Override
    public void caseTOperEq(@SuppressWarnings("unused") TOperEq node)
    {
        this.index = 17;
    }

    @Override
    public void caseTOperNe(@SuppressWarnings("unused") TOperNe node)
    {
        this.index = 18;
    }

    @Override
    public void caseTOperLt(@SuppressWarnings("unused") TOperLt node)
    {
        this.index = 19;
    }

    @Override
    public void caseTOperGt(@SuppressWarnings("unused") TOperGt node)
    {
        this.index = 20;
    }

    @Override
    public void caseTOperLe(@SuppressWarnings("unused") TOperLe node)
    {
        this.index = 21;
    }

    @Override
    public void caseTOperGe(@SuppressWarnings("unused") TOperGe node)
    {
        this.index = 22;
    }

    @Override
    public void caseTOperAnd(@SuppressWarnings("unused") TOperAnd node)
    {
        this.index = 23;
    }

    @Override
    public void caseTOperOr(@SuppressWarnings("unused") TOperOr node)
    {
        this.index = 24;
    }

    @Override
    public void caseTOperNot(@SuppressWarnings("unused") TOperNot node)
    {
        this.index = 25;
    }

    @Override
    public void caseTSepLpar(@SuppressWarnings("unused") TSepLpar node)
    {
        this.index = 26;
    }

    @Override
    public void caseTSepRpar(@SuppressWarnings("unused") TSepRpar node)
    {
        this.index = 27;
    }

    @Override
    public void caseTSepLbrack(@SuppressWarnings("unused") TSepLbrack node)
    {
        this.index = 28;
    }

    @Override
    public void caseTSepRbrack(@SuppressWarnings("unused") TSepRbrack node)
    {
        this.index = 29;
    }

    @Override
    public void caseTSepLbrace(@SuppressWarnings("unused") TSepLbrace node)
    {
        this.index = 30;
    }

    @Override
    public void caseTSepRbrace(@SuppressWarnings("unused") TSepRbrace node)
    {
        this.index = 31;
    }

    @Override
    public void caseTSepComma(@SuppressWarnings("unused") TSepComma node)
    {
        this.index = 32;
    }

    @Override
    public void caseTSepColon(@SuppressWarnings("unused") TSepColon node)
    {
        this.index = 33;
    }

    @Override
    public void caseTSepSemi(@SuppressWarnings("unused") TSepSemi node)
    {
        this.index = 34;
    }

    @Override
    public void caseTSepAssign(@SuppressWarnings("unused") TSepAssign node)
    {
        this.index = 35;
    }

    @Override
    public void caseTIdentifier(@SuppressWarnings("unused") TIdentifier node)
    {
        this.index = 36;
    }

    @Override
    public void caseTInteger(@SuppressWarnings("unused") TInteger node)
    {
        this.index = 37;
    }

    @Override
    public void caseTIntegerError(@SuppressWarnings("unused") TIntegerError node)
    {
        this.index = 38;
    }

    @Override
    public void caseTCharacter(@SuppressWarnings("unused") TCharacter node)
    {
        this.index = 39;
    }

    @Override
    public void caseTString(@SuppressWarnings("unused") TString node)
    {
        this.index = 40;
    }

    @Override
    public void caseEOF(@SuppressWarnings("unused") EOF node)
    {
        this.index = 41;
    }
}
