/* This file was generated by SableCC (http://www.sablecc.org/). */

package k31.grc.cst.node;

import k31.grc.cst.analysis.*;

@SuppressWarnings("nls")
public final class AParenthesisFactorL extends PFactorL
{
    private TSepLpar _sepLpar_;
    private PExpressionL _expressionL_;
    private TSepRpar _sepRpar_;

    public AParenthesisFactorL()
    {
        // Constructor
    }

    public AParenthesisFactorL(
        @SuppressWarnings("hiding") TSepLpar _sepLpar_,
        @SuppressWarnings("hiding") PExpressionL _expressionL_,
        @SuppressWarnings("hiding") TSepRpar _sepRpar_)
    {
        // Constructor
        setSepLpar(_sepLpar_);

        setExpressionL(_expressionL_);

        setSepRpar(_sepRpar_);

    }

    @Override
    public Object clone()
    {
        return new AParenthesisFactorL(
            cloneNode(this._sepLpar_),
            cloneNode(this._expressionL_),
            cloneNode(this._sepRpar_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAParenthesisFactorL(this);
    }

    public TSepLpar getSepLpar()
    {
        return this._sepLpar_;
    }

    public void setSepLpar(TSepLpar node)
    {
        if(this._sepLpar_ != null)
        {
            this._sepLpar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._sepLpar_ = node;
    }

    public PExpressionL getExpressionL()
    {
        return this._expressionL_;
    }

    public void setExpressionL(PExpressionL node)
    {
        if(this._expressionL_ != null)
        {
            this._expressionL_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expressionL_ = node;
    }

    public TSepRpar getSepRpar()
    {
        return this._sepRpar_;
    }

    public void setSepRpar(TSepRpar node)
    {
        if(this._sepRpar_ != null)
        {
            this._sepRpar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._sepRpar_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._sepLpar_)
            + toString(this._expressionL_)
            + toString(this._sepRpar_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._sepLpar_ == child)
        {
            this._sepLpar_ = null;
            return;
        }

        if(this._expressionL_ == child)
        {
            this._expressionL_ = null;
            return;
        }

        if(this._sepRpar_ == child)
        {
            this._sepRpar_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._sepLpar_ == oldChild)
        {
            setSepLpar((TSepLpar) newChild);
            return;
        }

        if(this._expressionL_ == oldChild)
        {
            setExpressionL((PExpressionL) newChild);
            return;
        }

        if(this._sepRpar_ == oldChild)
        {
            setSepRpar((TSepRpar) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
