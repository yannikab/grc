/* This file was generated by SableCC (http://www.sablecc.org/). */

package k31.grc.cst.node;

import k31.grc.cst.analysis.*;

@SuppressWarnings("nls")
public final class AFparDefMore extends PFparDefMore
{
    private TSepSemi _sepSemi_;
    private PFparDef _fparDef_;

    public AFparDefMore()
    {
        // Constructor
    }

    public AFparDefMore(
        @SuppressWarnings("hiding") TSepSemi _sepSemi_,
        @SuppressWarnings("hiding") PFparDef _fparDef_)
    {
        // Constructor
        setSepSemi(_sepSemi_);

        setFparDef(_fparDef_);

    }

    @Override
    public Object clone()
    {
        return new AFparDefMore(
            cloneNode(this._sepSemi_),
            cloneNode(this._fparDef_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFparDefMore(this);
    }

    public TSepSemi getSepSemi()
    {
        return this._sepSemi_;
    }

    public void setSepSemi(TSepSemi node)
    {
        if(this._sepSemi_ != null)
        {
            this._sepSemi_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._sepSemi_ = node;
    }

    public PFparDef getFparDef()
    {
        return this._fparDef_;
    }

    public void setFparDef(PFparDef node)
    {
        if(this._fparDef_ != null)
        {
            this._fparDef_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fparDef_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._sepSemi_)
            + toString(this._fparDef_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._sepSemi_ == child)
        {
            this._sepSemi_ = null;
            return;
        }

        if(this._fparDef_ == child)
        {
            this._fparDef_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._sepSemi_ == oldChild)
        {
            setSepSemi((TSepSemi) newChild);
            return;
        }

        if(this._fparDef_ == oldChild)
        {
            setFparDef((PFparDef) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
